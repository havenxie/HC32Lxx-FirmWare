; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\exe\hc32l110_gpio.o --asm_dir=.\Output\Listings\ --list_dir=.\Output\Listings\ --depend=.\output\exe\hc32l110_gpio.d --cpu=Cortex-M0+ --apcs=interwork -O1 -Otime --diag_suppress=9931 -I..\Src -I..\lib\inc -I.\RTE\_HC32L110_Demo -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\Device\ARM\ARMCM0plus\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DARMCM0P --omf_browse=.\output\exe\hc32l110_gpio.crf ..\lib\src\hc32l110_gpio.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GPIO_DeInit PROC
;;;3      
;;;4      void GPIO_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;5      {
;;;6          RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  070c              LSLS     r4,r1,#28
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       RCC_AHBPeriphResetCmd
;;;7          RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIO, DISABLE);
00000c  2100              MOVS     r1,#0
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       RCC_AHBPeriphResetCmd
;;;8      }
000014  bd10              POP      {r4,pc}
;;;9      
                          ENDP

                  GPIO_Init PROC
;;;10     
;;;11     void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
000016  b470              PUSH     {r4-r6}
;;;12     {
;;;13       uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
000018  2300              MOVS     r3,#0
;;;14     
;;;15       /* Check the parameters */
;;;16       assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;17       assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
;;;18       assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
;;;19       assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
;;;20     
;;;21       /*-------------------------- Configure the port pins -----------------------*/
;;;22       /*-- GPIO Mode Configuration --*/
;;;23       for (pinpos = 0x00; pinpos < 0x8; pinpos++)
;;;24       {
;;;25         pos = ((uint32_t)0x01) << pinpos;
00001a  2501              MOVS     r5,#1
;;;26     
;;;27         /* Get the port pins position */
;;;28         currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
;;;29     
;;;30         if (currentpin == pos)
;;;31         {
;;;32           if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
;;;33           {
;;;34             /* Check Output mode parameters */
;;;35             assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
;;;36     
;;;37             /* Output mode configuration */
;;;38             GPIOx->PxOD &= ~(0X1 << ((uint16_t)pinpos));
00001c  30ff              ADDS     r0,r0,#0xff
00001e  3001              ADDS     r0,#1
                  |L1.32|
000020  462a              MOV      r2,r5                 ;25
000022  409a              LSLS     r2,r2,r3              ;25
000024  680c              LDR      r4,[r1,#0]            ;28
000026  4014              ANDS     r4,r4,r2              ;28
000028  4294              CMP      r4,r2                 ;30
00002a  d13b              BNE      |L1.164|
00002c  790c              LDRB     r4,[r1,#4]            ;32
00002e  2c01              CMP      r4,#1                 ;32
000030  d001              BEQ      |L1.54|
000032  2c02              CMP      r4,#2                 ;32
000034  d108              BNE      |L1.72|
                  |L1.54|
000036  6ac4              LDR      r4,[r0,#0x2c]
000038  4394              BICS     r4,r4,r2
00003a  62c4              STR      r4,[r0,#0x2c]
;;;39             GPIOx->PxOD |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
00003c  6ac4              LDR      r4,[r0,#0x2c]
00003e  798e              LDRB     r6,[r1,#6]
000040  409e              LSLS     r6,r6,r3
000042  b2b6              UXTH     r6,r6
000044  4334              ORRS     r4,r4,r6
000046  62c4              STR      r4,[r0,#0x2c]
                  |L1.72|
;;;40           }
;;;41           switch((uint32_t)(GPIO_InitStruct->GPIO_Mode))
000048  790c              LDRB     r4,[r1,#4]
00004a  2c00              CMP      r4,#0
00004c  d006              BEQ      |L1.92|
00004e  2c01              CMP      r4,#1
000050  d00b              BEQ      |L1.106|
000052  2c02              CMP      r4,#2
000054  d013              BEQ      |L1.126|
000056  2c03              CMP      r4,#3
000058  d111              BNE      |L1.126|
00005a  e00d              B        |L1.120|
                  |L1.92|
;;;42           {
;;;43               case GPIO_Mode_IN:
;;;44                   GPIOx->PxADS &= ~(0x1 << pinpos);
00005c  68c4              LDR      r4,[r0,#0xc]
00005e  4394              BICS     r4,r4,r2
000060  60c4              STR      r4,[r0,#0xc]
;;;45                   GPIOx->PxDIR |= 0x1 << pinpos;
000062  6804              LDR      r4,[r0,#0]
000064  4314              ORRS     r4,r4,r2
000066  6004              STR      r4,[r0,#0]
;;;46                   break;
000068  e009              B        |L1.126|
                  |L1.106|
;;;47               case GPIO_Mode_OUT:
;;;48                   GPIOx->PxADS &= ~(0x1 << pinpos);
00006a  68c4              LDR      r4,[r0,#0xc]
00006c  4394              BICS     r4,r4,r2
00006e  60c4              STR      r4,[r0,#0xc]
;;;49                   GPIOx->PxDIR &= ~(0x1 << pinpos);
000070  6804              LDR      r4,[r0,#0]
000072  4394              BICS     r4,r4,r2
000074  6004              STR      r4,[r0,#0]
;;;50                   break;
000076  e002              B        |L1.126|
                  |L1.120|
;;;51               case GPIO_Mode_AF:
;;;52                   break;
;;;53               case GPIO_Mode_AN:
;;;54                   GPIOx->PxADS |= (0x1 << pinpos);              
000078  68c4              LDR      r4,[r0,#0xc]
00007a  4314              ORRS     r4,r4,r2
00007c  60c4              STR      r4,[r0,#0xc]
                  |L1.126|
;;;55                   break;
;;;56               default:
;;;57                   break;
;;;58           }
;;;59     
;;;60           /* Pull-up Pull down resistor configuration */
;;;61           if(GPIO_InitStruct->GPIO_PuPd == GPIO_PuPd_UP)
00007e  79cc              LDRB     r4,[r1,#7]
000080  2c01              CMP      r4,#1
000082  d002              BEQ      |L1.138|
;;;62           {
;;;63             GPIOx->PxPU &= ~(0x1 << pinpos);
;;;64             GPIOx->PxPU |= (0x1 << pinpos);  
;;;65           }
;;;66           else if(GPIO_InitStruct->GPIO_PuPd == GPIO_PuPd_DOWN)
000084  2c02              CMP      r4,#2
000086  d007              BEQ      |L1.152|
000088  e00c              B        |L1.164|
                  |L1.138|
00008a  6a04              LDR      r4,[r0,#0x20]         ;63
00008c  4394              BICS     r4,r4,r2              ;63
00008e  6204              STR      r4,[r0,#0x20]         ;63
000090  6a04              LDR      r4,[r0,#0x20]         ;64
000092  4314              ORRS     r4,r4,r2              ;64
000094  6204              STR      r4,[r0,#0x20]         ;64
000096  e005              B        |L1.164|
                  |L1.152|
;;;67           {
;;;68             GPIOx->PxPD &= ~(0x1 << pinpos);
000098  6a44              LDR      r4,[r0,#0x24]
00009a  4394              BICS     r4,r4,r2
00009c  6244              STR      r4,[r0,#0x24]
;;;69             GPIOx->PxPD |= (0x1 << pinpos);  
00009e  6a44              LDR      r4,[r0,#0x24]
0000a0  4314              ORRS     r4,r4,r2
0000a2  6244              STR      r4,[r0,#0x24]
                  |L1.164|
0000a4  1c5b              ADDS     r3,r3,#1              ;23
0000a6  2b08              CMP      r3,#8                 ;23
0000a8  d3ba              BCC      |L1.32|
;;;70           }
;;;71         }
;;;72       }
;;;73     }
0000aa  bc70              POP      {r4-r6}
0000ac  4770              BX       lr
;;;74     
                          ENDP

                  GPIO_StructInit PROC
;;;80     //  */
;;;81     void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
0000ae  4935              LDR      r1,|L1.388|
;;;82     {
;;;83       /* Reset GPIO init structure parameters values */
;;;84       GPIO_InitStruct->GPIO_Pin  = PINALL;
0000b0  6001              STR      r1,[r0,#0]
;;;85       GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
0000b2  2100              MOVS     r1,#0
0000b4  7101              STRB     r1,[r0,#4]
;;;86       GPIO_InitStruct->GPIO_Speed = GPIO_Speed_Level_2;
0000b6  2202              MOVS     r2,#2
0000b8  7142              STRB     r2,[r0,#5]
;;;87       GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
0000ba  7181              STRB     r1,[r0,#6]
;;;88       GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
0000bc  71c1              STRB     r1,[r0,#7]
;;;89     }
0000be  4770              BX       lr
;;;90     
                          ENDP

                  GPIO_WriteBit PROC
;;;215    //  */
;;;216    void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
0000c0  30ff              ADDS     r0,r0,#0xff
;;;217    {
;;;218      /* Check the parameters */
;;;219      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;220      assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
;;;221      assert_param(IS_GPIO_BIT_ACTION(BitVal));
;;;222    
;;;223      if(BitVal)
;;;224        GPIOx->PxOUT |= (GPIO_Pin);
0000c2  3001              ADDS     r0,#1
0000c4  2a00              CMP      r2,#0                 ;223
0000c6  d003              BEQ      |L1.208|
0000c8  6882              LDR      r2,[r0,#8]
0000ca  430a              ORRS     r2,r2,r1
0000cc  6082              STR      r2,[r0,#8]
;;;225      else
;;;226        GPIOx->PxOUT &= ~(GPIO_Pin); 
;;;227    
;;;228    }
0000ce  4770              BX       lr
                  |L1.208|
0000d0  6882              LDR      r2,[r0,#8]            ;226
0000d2  438a              BICS     r2,r2,r1              ;226
0000d4  6082              STR      r2,[r0,#8]            ;226
0000d6  4770              BX       lr
;;;229    
                          ENDP

                  GPIO_Write PROC
;;;236    //  */
;;;237    void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
0000d8  30ff              ADDS     r0,r0,#0xff
;;;238    {
;;;239      /* Check the parameters */
;;;240      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
;;;241    
;;;242      GPIOx->PxOUT = PortVal;
0000da  3001              ADDS     r0,#1
0000dc  6081              STR      r1,[r0,#8]
;;;243    }
0000de  4770              BX       lr
;;;244    
                          ENDP

                  GPIO_PinAFConfig PROC
;;;283     */
;;;284    void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
0000e0  b410              PUSH     {r4}
;;;285    {
;;;286      uint32_t temp = 0x00;
0000e2  2300              MOVS     r3,#0
;;;287      /* Check the parameters */
;;;288      assert_param(IS_GPIO_LIST_PERIPH(GPIOx));
;;;289      assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
;;;290      assert_param(IS_GPIO_AF(GPIO_AF));
;;;291      if(GPIOx == GPIO0) 
0000e4  4c28              LDR      r4,|L1.392|
0000e6  42a0              CMP      r0,r4
0000e8  d103              BNE      |L1.242|
;;;292      {
;;;293          if((GPIO_PinSource < GPIO_PinSource1) || (GPIO_PinSource > GPIO_PinSource3))
0000ea  1e8c              SUBS     r4,r1,#2
0000ec  2c07              CMP      r4,#7
0000ee  d21d              BCS      |L1.300|
0000f0  e014              B        |L1.284|
                  |L1.242|
;;;294              return;
;;;295      }
;;;296      else if(GPIOx == GPIO1)
0000f2  4c26              LDR      r4,|L1.396|
0000f4  42a0              CMP      r0,r4
0000f6  d104              BNE      |L1.258|
;;;297      {
;;;298          if((GPIO_PinSource < GPIO_PinSource4) || (GPIO_PinSource > GPIO_PinSource5))
0000f8  460c              MOV      r4,r1
0000fa  3c10              SUBS     r4,r4,#0x10
0000fc  2c11              CMP      r4,#0x11
0000fe  d215              BCS      |L1.300|
000100  e00c              B        |L1.284|
                  |L1.258|
;;;299              return;
;;;300      }
;;;301      else if(GPIOx == GPIO2)
000102  4c23              LDR      r4,|L1.400|
000104  42a0              CMP      r0,r4
000106  d102              BNE      |L1.270|
;;;302      {
;;;303          if(GPIO_PinSource < GPIO_PinSource3) return;
000108  2908              CMP      r1,#8
00010a  d30f              BCC      |L1.300|
00010c  e006              B        |L1.284|
                  |L1.270|
;;;304      }
;;;305      else if(GPIOx == GPIO3)
00010e  4c21              LDR      r4,|L1.404|
000110  42a0              CMP      r0,r4
000112  d103              BNE      |L1.284|
;;;306      {
;;;307          if((GPIO_PinSource == GPIO_PinSource0) || (GPIO_PinSource == GPIO_PinSource7))return;
000114  2901              CMP      r1,#1
000116  d009              BEQ      |L1.300|
000118  2980              CMP      r1,#0x80
00011a  d007              BEQ      |L1.300|
                  |L1.284|
;;;308      }
;;;309      
;;;310    
;;;311      while((GPIO_PinSource & 0x0001) != 0x0001)
00011c  07cc              LSLS     r4,r1,#31
00011e  d103              BNE      |L1.296|
                  |L1.288|
;;;312      {
;;;313          GPIO_PinSource>>=1;
000120  0849              LSRS     r1,r1,#1
;;;314          temp++;
000122  1c5b              ADDS     r3,r3,#1
000124  07cc              LSLS     r4,r1,#31             ;311
000126  d0fb              BEQ      |L1.288|
                  |L1.296|
;;;315      }
;;;316      GPIOx->SEL[temp] = GPIO_AF;  
000128  0099              LSLS     r1,r3,#2
00012a  5042              STR      r2,[r0,r1]
                  |L1.300|
;;;317    }
00012c  bc10              POP      {r4}
00012e  4770              BX       lr
;;;318    
                          ENDP

                  McuDelay PROC
;;;319    void McuDelay( uint32_t cnt )
000130  2800              CMP      r0,#0
;;;320    {
000132  d002              BEQ      |L1.314|
                  |L1.308|
;;;321    	while( cnt )
;;;322    	{
;;;323    		cnt--;
000134  1e40              SUBS     r0,r0,#1
000136  2800              CMP      r0,#0                 ;321
000138  d1fc              BNE      |L1.308|
                  |L1.314|
;;;324    	}
;;;325    	 
;;;326    }
00013a  4770              BX       lr
;;;327    void GPIO_Test(void)
                          ENDP

                  GPIO_Test PROC
00013c  b082              SUB      sp,sp,#8
;;;328    {
;;;329        GPIO_InitTypeDef GPIO_InitStructure;
;;;330        RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIO, ENABLE);
00013e  2101              MOVS     r1,#1
000140  0708              LSLS     r0,r1,#28
000142  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;331        
;;;332        GPIO_InitStructure.GPIO_Pin = GPIO_PinSource3 ;
000146  2008              MOVS     r0,#8
000148  9000              STR      r0,[sp,#0]
;;;333        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
00014a  2001              MOVS     r0,#1
00014c  4669              MOV      r1,sp
00014e  7108              STRB     r0,[r1,#4]
;;;334        GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;	
000150  2000              MOVS     r0,#0
000152  7188              STRB     r0,[r1,#6]
;;;335        GPIO_Init(GPIO0, &GPIO_InitStructure);
000154  4c0c              LDR      r4,|L1.392|
000156  4620              MOV      r0,r4
000158  f7fffffe          BL       GPIO_Init
;;;336        while(1)
;;;337        {
;;;338            GPIO_WriteBit(GPIO0, GPIO_PinSource3, Bit_SET);
;;;339            //GPIO_WriteBit(GPIO2, GPIO_PinSource4, Bit_SET);
;;;340            McuDelay(40000);
00015c  4d0e              LDR      r5,|L1.408|
;;;341            GPIO_WriteBit(GPIO0, GPIO_PinSource3, Bit_RESET);
;;;342            //GPIO_WriteBit(GPIO2, GPIO_PinSource4, Bit_RESET);
;;;343            McuDelay(200000);
00015e  4e0f              LDR      r6,|L1.412|
                  |L1.352|
000160  4623              MOV      r3,r4                 ;338
000162  2201              MOVS     r2,#1                 ;338
000164  2108              MOVS     r1,#8                 ;338
000166  4618              MOV      r0,r3                 ;338
000168  f7fffffe          BL       GPIO_WriteBit
00016c  4628              MOV      r0,r5                 ;340
00016e  f7fffffe          BL       McuDelay
000172  2200              MOVS     r2,#0                 ;341
000174  2108              MOVS     r1,#8                 ;341
000176  4618              MOV      r0,r3                 ;341
000178  f7fffffe          BL       GPIO_WriteBit
00017c  4630              MOV      r0,r6
00017e  f7fffffe          BL       McuDelay
000182  e7ed              B        |L1.352|
;;;344        }
;;;345    }
                          ENDP

                  |L1.388|
                          DCD      0x0000ffff
                  |L1.392|
                          DCD      0x40020c00
                  |L1.396|
                          DCD      0x40020c40
                  |L1.400|
                          DCD      0x40020c80
                  |L1.404|
                          DCD      0x40020cc0
                  |L1.408|
                          DCD      0x00009c40
                  |L1.412|
                          DCD      0x00030d40

;*** Start embedded assembler ***

#line 1 "..\\lib\\src\\hc32l110_gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_hc32l110_gpio_c_f8e8e39a____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___15_hc32l110_gpio_c_f8e8e39a____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_hc32l110_gpio_c_f8e8e39a____REVSH|
#line 462
|__asm___15_hc32l110_gpio_c_f8e8e39a____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
